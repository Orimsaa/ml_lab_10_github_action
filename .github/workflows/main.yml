name: MLOps Pipeline CI/CT/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: mlops-pipeline-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci-checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install -r mlops_pipeline/requirements.txt
        pip install flake8 pytest pandas

    - name: Lint with flake8
      shell: bash
      run: |
        flake8 mlops_pipeline/scripts --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 mlops_pipeline/scripts --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest (pass if no tests)
      shell: bash
      run: |
        pytest || code=$?
        if [ "${code:-0}" -eq 5 ]; then
          echo "Pytest finished: No tests found."
          exit 0
        elif [ -n "${code:-}" ] && [ "$code" -ne 0 ]; then
          exit "$code"
        fi

  build-and-train:
    needs: ci-checks
    runs-on: ubuntu-latest
    env:
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install -r mlops_pipeline/requirements.txt

    - name: Run Data Validation
      shell: bash
      run: |
        python mlops_pipeline/scripts/01_data_validation.py

    - name: Run Data Preprocessing
      id: preprocessing
      shell: bash
      run: |
        python mlops_pipeline/scripts/02_data_preprocessing.py

    - name: Run Model Training, Evaluation, and Registration
      shell: bash
      run: |
        # arg1: run_id จาก step preprocessing (อ่านจาก $GITHUB_OUTPUT ในสคริปต์)
        # arg2: ACCURACY_THRESHOLD (ตั้งให้เหมาะกับงานจริง)
        python mlops_pipeline/scripts/03_train_evaluate_register.py ${{ steps.preprocessing.outputs.run_id }} 300

    - name: Transition Model to Staging
      if: success()
      shell: bash
      run: |
        python mlops_pipeline/scripts/04_transition_model.py "wine-classifier-prod" "Staging"

    - name: Upload MLflow artifacts (skip if using remote tracking)
      if: ${{ hashFiles('mlruns/**') != '' }}
      uses: actions/upload-artifact@v4
      with:
        name: mlflow-artifacts
        path: mlruns/
